---
- name: Start newly created VMs and login after delay
  hosts: proxmox
  gather_facts: false
  vars:
    vms:
      - { vmid: 8001, name: "kmaster", ip: "192.168.1.41" }
      - { vmid: 8002, name: "knode1", ip: "192.168.1.42" }
      - { vmid: 8003, name: "knode2", ip: "192.168.1.43" }
    login_user: lazarous
    login_command: "whoami"
    k8s_version: "v1.33"

  tasks:
    - name: Start each VM
      ansible.builtin.shell: qm start {{ item.vmid }}
      loop: "{{ vms }}"
      loop_control:
        label: "Starting {{ item.name }}"

    - name: Wait 5 minutes for VMs to boot and cloud-init to finish
      ansible.builtin.pause:
        minutes: 5

    - name: Attempt SSH login and run command on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} {{ login_command }}
      loop: "{{ vms }}"
      loop_control:
        label: "Logging into {{ item.name }}"
      ignore_errors: yes
      delegate_to: localhost

    - name: Update and upgrade packages on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "sudo apt update && sudo apt upgrade -y"
      loop: "{{ vms }}"
      loop_control:
        label: "Updating {{ item.name }}"
      delegate_to: localhost

    - name: Install docker.io on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "sudo apt install -y docker.io"
      loop: "{{ vms }}"
      loop_control:
        label: "Installing Docker on {{ item.name }}"
      delegate_to: localhost

    - name: Add Kubernetes apt repo on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list"
      loop: "{{ vms }}"
      loop_control:
        label: "Adding Kubernetes repo to {{ item.name }}"
      delegate_to: localhost

    - name: Add Kubernetes apt key on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
      loop: "{{ vms }}"
      loop_control:
        label: "Adding Kubernetes key to {{ item.name }}"
      delegate_to: localhost

    - name: Update apt cache after adding Kubernetes repo
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "sudo apt update"
      loop: "{{ vms }}"
      loop_control:
        label: "Updating apt cache for {{ item.name }}"
      delegate_to: localhost

    - name: Install kubelet, kubeadm, kubectl on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "sudo apt install -y kubelet kubeadm kubectl"
      loop: "{{ vms }}"
      loop_control:
        label: "Installing Kubernetes components on {{ item.name }}"
      delegate_to: localhost

    - name: Hold kubelet, kubeadm, kubectl versions
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "sudo apt-mark hold kubelet kubeadm kubectl"
      loop: "{{ vms }}"
      loop_control:
        label: "Holding Kubernetes versions on {{ item.name }}"
      delegate_to: localhost

    - name: Disable swap on each VM
      ansible.builtin.shell: ssh -o StrictHostKeyChecking=no {{ login_user }}@{{ item.ip }} "sudo swapoff -a && sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab"
      loop: "{{ vms }}"
      loop_control:
        label: "Disabling swap on {{ item.name }}"
      delegate_to: localhost
